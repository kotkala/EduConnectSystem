'use server'

import nodemailer from 'nodemailer'

// Create SMTP transporter (much simpler than Resend)
const transporter = nodemailer.createTransport({
  host: process.env.SMTP_HOST || 'smtp.gmail.com',
  port: parseInt(process.env.SMTP_PORT || '587'),
  secure: false, // true for 465, false for other ports
  auth: {
    user: process.env.SMTP_USER,
    pass: process.env.SMTP_PASS,
  },
})

// Email templates following Context7 patterns
export interface TeacherReminderEmailData {
  teacherEmail: string
  teacherName: string
  reportPeriodName: string
  endDate: string
  incompleteClasses: Array<{
    className: string
    totalStudents: number
    completedReports: number
  }>
}

export interface ParentReportEmailData {
  parentEmail: string
  parentName: string
  studentName: string
  reportPeriodName: string
  startDate: string
  endDate: string
  reportUrl?: string
}

export interface ParentReminderEmailData {
  parentEmail: string
  parentName: string
  studentName: string
  reportPeriodName: string
  endDate: string
  reportUrl?: string
}

// Teacher reminder email template (HTML)
function createTeacherReminderTemplate(data: TeacherReminderEmailData): string {
  const incompleteClassesList = data.incompleteClasses
    .map(cls => `
      <tr>
        <td style="padding: 8px; border: 1px solid #ddd;">${cls.className}</td>
        <td style="padding: 8px; border: 1px solid #ddd; text-align: center;">${cls.completedReports}/${cls.totalStudents}</td>
        <td style="padding: 8px; border: 1px solid #ddd; text-align: center;">${cls.totalStudents - cls.completedReports}</td>
      </tr>
    `).join('')

  return `
    <!DOCTYPE html>
    <html>
    <head>
      <meta charset="utf-8">
      <title>Nh·∫Øc nh·ªü n·ªôp b√°o c√°o h·ªçc sinh</title>
    </head>
    <body style="font-family: Arial, sans-serif; line-height: 1.6; color: #333;">
      <div style="max-width: 600px; margin: 0 auto; padding: 20px;">
        <h2 style="color: #2563eb;">Nh·∫Øc nh·ªü n·ªôp b√°o c√°o h·ªçc sinh</h2>
        
        <p>K√≠nh ch√†o <strong>${data.teacherName}</strong>,</p>
        
        <p>Ch√∫ng t√¥i xin nh·∫Øc nh·ªü v·ªÅ vi·ªác n·ªôp b√°o c√°o h·ªçc sinh cho <strong>${data.reportPeriodName}</strong>.</p>
        
        <div style="background-color: #fef3c7; padding: 15px; border-radius: 5px; margin: 20px 0;">
          <p style="margin: 0;"><strong>‚è∞ Th·ªùi h·∫°n:</strong> ${new Date(data.endDate).toLocaleDateString('vi-VN')}</p>
        </div>
        
        <h3>C√°c l·ªõp ch∆∞a ho√†n th√†nh b√°o c√°o:</h3>
        <table style="width: 100%; border-collapse: collapse; margin: 20px 0;">
          <thead>
            <tr style="background-color: #f3f4f6;">
              <th style="padding: 10px; border: 1px solid #ddd; text-align: left;">L·ªõp</th>
              <th style="padding: 10px; border: 1px solid #ddd; text-align: center;">ƒê√£ n·ªôp</th>
              <th style="padding: 10px; border: 1px solid #ddd; text-align: center;">C√≤n l·∫°i</th>
            </tr>
          </thead>
          <tbody>
            ${incompleteClassesList}
          </tbody>
        </table>
        
        <p>Vui l√≤ng ho√†n th√†nh b√°o c√°o cho t·∫•t c·∫£ h·ªçc sinh tr∆∞·ªõc th·ªùi h·∫°n.</p>
        
        <div style="margin-top: 30px; padding-top: 20px; border-top: 1px solid #e5e7eb;">
          <p style="color: #6b7280; font-size: 14px;">
            Tr√¢n tr·ªçng,<br>
            <strong>H·ªá th·ªëng qu·∫£n l√Ω gi√°o d·ª•c EduConnect</strong>
          </p>
        </div>
      </div>
    </body>
    </html>
  `
}

// Parent report notification email template (HTML)
function createParentReportTemplate(data: ParentReportEmailData): string {
  return `
    <!DOCTYPE html>
    <html>
    <head>
      <meta charset="utf-8">
      <title>B√°o c√°o h·ªçc t·∫≠p c·ªßa ${data.studentName}</title>
    </head>
    <body style="font-family: Arial, sans-serif; line-height: 1.6; color: #333;">
      <div style="max-width: 600px; margin: 0 auto; padding: 20px;">
        <h2 style="color: #2563eb;">üìã B√°o c√°o h·ªçc t·∫≠p m·ªõi</h2>
        
        <p>K√≠nh ch√†o <strong>${data.parentName}</strong>,</p>
        
        <p>B√°o c√°o h·ªçc t·∫≠p c·ªßa con em b·∫°n <strong>${data.studentName}</strong> cho <strong>${data.reportPeriodName}</strong> ƒë√£ s·∫µn s√†ng.</p>
        
        <div style="background-color: #ecfdf5; padding: 15px; border-radius: 5px; margin: 20px 0;">
          <h3 style="margin: 0 0 10px 0; color: #059669;">üìÖ Th√¥ng tin k·ª≥ b√°o c√°o</h3>
          <p style="margin: 5px 0;"><strong>K·ª≥ b√°o c√°o:</strong> ${data.reportPeriodName}</p>
          <p style="margin: 5px 0;"><strong>T·ª´ ng√†y:</strong> ${new Date(data.startDate).toLocaleDateString('vi-VN')}</p>
          <p style="margin: 5px 0;"><strong>ƒê·∫øn ng√†y:</strong> ${new Date(data.endDate).toLocaleDateString('vi-VN')}</p>
        </div>
        
        <p>Vui l√≤ng ƒëƒÉng nh·∫≠p v√†o h·ªá th·ªëng ƒë·ªÉ xem chi ti·∫øt b√°o c√°o h·ªçc t·∫≠p c·ªßa con em.</p>
        
        ${data.reportUrl ? `
        <div style="text-align: center; margin: 30px 0;">
          <a href="${data.reportUrl}" style="background-color: #2563eb; color: white; padding: 12px 24px; text-decoration: none; border-radius: 5px; display: inline-block;">
            üìñ Xem b√°o c√°o
          </a>
        </div>
        ` : ''}
        
        <div style="margin-top: 30px; padding-top: 20px; border-top: 1px solid #e5e7eb;">
          <p style="color: #6b7280; font-size: 14px;">
            Tr√¢n tr·ªçng,<br>
            <strong>H·ªá th·ªëng qu·∫£n l√Ω gi√°o d·ª•c EduConnect</strong>
          </p>
        </div>
      </div>
    </body>
    </html>
  `
}

// Parent reminder email template (HTML)
function createParentReminderTemplate(data: ParentReminderEmailData): string {
  return `
    <!DOCTYPE html>
    <html>
    <head>
      <meta charset="utf-8">
      <title>Nh·∫Øc nh·ªü xem b√°o c√°o h·ªçc t·∫≠p</title>
    </head>
    <body style="font-family: Arial, sans-serif; line-height: 1.6; color: #333;">
      <div style="max-width: 600px; margin: 0 auto; padding: 20px;">
        <h2 style="color: #f59e0b;">‚è∞ Nh·∫Øc nh·ªü xem b√°o c√°o h·ªçc t·∫≠p</h2>
        
        <p>K√≠nh ch√†o <strong>${data.parentName}</strong>,</p>
        
        <p>Ch√∫ng t√¥i xin nh·∫Øc nh·ªü v·ªÅ b√°o c√°o h·ªçc t·∫≠p c·ªßa con em b·∫°n <strong>${data.studentName}</strong> cho <strong>${data.reportPeriodName}</strong>.</p>
        
        <div style="background-color: #fef3c7; padding: 15px; border-radius: 5px; margin: 20px 0;">
          <p style="margin: 0;"><strong>üìã B√°o c√°o ƒë√£ s·∫µn s√†ng t·ª´:</strong> ${new Date(data.endDate).toLocaleDateString('vi-VN')}</p>
          <p style="margin: 10px 0 0 0;">Vui l√≤ng ƒëƒÉng nh·∫≠p h·ªá th·ªëng ƒë·ªÉ xem chi ti·∫øt.</p>
        </div>
        
        ${data.reportUrl ? `
        <div style="text-align: center; margin: 30px 0;">
          <a href="${data.reportUrl}" style="background-color: #f59e0b; color: white; padding: 12px 24px; text-decoration: none; border-radius: 5px; display: inline-block;">
            üìñ Xem b√°o c√°o ngay
          </a>
        </div>
        ` : ''}
        
        <p>Vi·ªác theo d√µi b√°o c√°o h·ªçc t·∫≠p gi√∫p ph·ª• huynh n·∫Øm b·∫Øt t√¨nh h√¨nh h·ªçc t·∫≠p v√† r√®n luy·ªán c·ªßa con em.</p>
        
        <div style="margin-top: 30px; padding-top: 20px; border-top: 1px solid #e5e7eb;">
          <p style="color: #6b7280; font-size: 14px;">
            Tr√¢n tr·ªçng,<br>
            <strong>H·ªá th·ªëng qu·∫£n l√Ω gi√°o d·ª•c EduConnect</strong>
          </p>
        </div>
      </div>
    </body>
    </html>
  `
}

// Send teacher reminder email (simplified with nodemailer)
export async function sendTeacherReminderEmail(data: TeacherReminderEmailData): Promise<{ success: boolean; error?: string }> {
  try {
    if (!process.env.SMTP_USER || !process.env.SMTP_PASS) {
      throw new Error('SMTP credentials not configured')
    }

    await transporter.sendMail({
      from: process.env.EMAIL_FROM || 'EduConnect <noreply@gmail.com>',
      to: data.teacherEmail,
      subject: `‚è∞ Nh·∫Øc nh·ªü n·ªôp b√°o c√°o h·ªçc sinh - ${data.reportPeriodName}`,
      html: createTeacherReminderTemplate(data),
      text: `Nh·∫Øc nh·ªü n·ªôp b√°o c√°o h·ªçc sinh cho ${data.reportPeriodName}. Th·ªùi h·∫°n: ${new Date(data.endDate).toLocaleDateString('vi-VN')}.`
    })

    console.log('‚úÖ Teacher reminder email sent successfully to:', data.teacherEmail)
    return { success: true }
  } catch (error) {
    console.error('‚ùå Failed to send teacher reminder email:', error)
    return {
      success: false,
      error: error instanceof Error ? error.message : 'Failed to send email'
    }
  }
}

// Send parent report notification email (simplified)
export async function sendParentReportEmail(data: ParentReportEmailData): Promise<{ success: boolean; error?: string }> {
  try {
    if (!process.env.SMTP_USER || !process.env.SMTP_PASS) {
      throw new Error('SMTP credentials not configured')
    }

    await transporter.sendMail({
      from: process.env.EMAIL_FROM || 'EduConnect <noreply@gmail.com>',
      to: data.parentEmail,
      subject: `üìã B√°o c√°o h·ªçc t·∫≠p m·ªõi - ${data.studentName} (${data.reportPeriodName})`,
      html: createParentReportTemplate(data),
      text: `B√°o c√°o h·ªçc t·∫≠p c·ªßa ${data.studentName} cho ${data.reportPeriodName} ƒë√£ s·∫µn s√†ng. Vui l√≤ng ƒëƒÉng nh·∫≠p h·ªá th·ªëng ƒë·ªÉ xem chi ti·∫øt.`
    })

    console.log('‚úÖ Parent report email sent successfully to:', data.parentEmail)
    return { success: true }
  } catch (error) {
    console.error('‚ùå Failed to send parent report email:', error)
    return {
      success: false,
      error: error instanceof Error ? error.message : 'Failed to send email'
    }
  }
}

// Send parent reminder email (simplified)
export async function sendParentReminderEmail(data: ParentReminderEmailData): Promise<{ success: boolean; error?: string }> {
  try {
    if (!process.env.SMTP_USER || !process.env.SMTP_PASS) {
      throw new Error('SMTP credentials not configured')
    }

    await transporter.sendMail({
      from: process.env.EMAIL_FROM || 'EduConnect <noreply@gmail.com>',
      to: data.parentEmail,
      subject: `‚è∞ Nh·∫Øc nh·ªü xem b√°o c√°o h·ªçc t·∫≠p - ${data.studentName}`,
      html: createParentReminderTemplate(data),
      text: `Nh·∫Øc nh·ªü xem b√°o c√°o h·ªçc t·∫≠p c·ªßa ${data.studentName} cho ${data.reportPeriodName}. Vui l√≤ng ƒëƒÉng nh·∫≠p h·ªá th·ªëng ƒë·ªÉ xem chi ti·∫øt.`
    })

    console.log('‚úÖ Parent reminder email sent successfully to:', data.parentEmail)
    return { success: true }
  } catch (error) {
    console.error('‚ùå Failed to send parent reminder email:', error)
    return {
      success: false,
      error: error instanceof Error ? error.message : 'Failed to send email'
    }
  }
}

// Test email function to verify SMTP configuration
export async function testEmailConnection(): Promise<{ success: boolean; error?: string }> {
  try {
    if (!process.env.SMTP_USER || !process.env.SMTP_PASS) {
      throw new Error('SMTP credentials not configured')
    }

    // Verify SMTP connection
    await transporter.verify()
    console.log('‚úÖ SMTP connection verified successfully')

    // Send test email
    const result = await transporter.sendMail({
      from: process.env.EMAIL_FROM || 'EduConnect <noreply@gmail.com>',
      to: process.env.SMTP_USER, // Send to self for testing
      subject: 'üß™ Test Email - EduConnect System',
      html: `
        <h2>‚úÖ Email Test Successful</h2>
        <p>This is a test email from EduConnect system.</p>
        <p><strong>Time:</strong> ${new Date().toLocaleString('vi-VN')}</p>
        <p><strong>SMTP Host:</strong> ${process.env.SMTP_HOST}</p>
        <p><strong>From:</strong> ${process.env.EMAIL_FROM}</p>
      `,
      text: `Email test successful at ${new Date().toLocaleString('vi-VN')}`
    })

    console.log('‚úÖ Test email sent successfully:', result.messageId)
    return { success: true }
  } catch (error) {
    console.error('‚ùå Email test failed:', error)
    return {
      success: false,
      error: error instanceof Error ? error.message : 'Email test failed'
    }
  }
}
