'use server'

// SI√äU ƒê∆†N GI·∫¢N - Ch·ªâ log email thay v√¨ g·ª≠i th·∫≠t (cho development)
// Trong production, c√≥ th·ªÉ thay b·∫±ng service kh√°c

export interface EmailData {
  to: string
  subject: string
  content: string
}

// Simple email function - ch·ªâ log ra console
export async function sendSimpleEmail(data: EmailData): Promise<{ success: boolean; error?: string }> {
  try {
    // Trong development - ch·ªâ log
    if (process.env.NODE_ENV === 'development') {
      console.log('üìß EMAIL WOULD BE SENT:')
      console.log('To:', data.to)
      console.log('Subject:', data.subject)
      console.log('Content:', data.content)
      console.log('---')
      return { success: true }
    }

    // Trong production - c√≥ th·ªÉ d√πng fetch ƒë·ªÉ g·ªçi API kh√°c
    // Ho·∫∑c d√πng service ƒë∆°n gi·∫£n kh√°c
    
    return { success: true }
  } catch (error) {
    console.error('‚ùå Email error:', error)
    return { 
      success: false, 
      error: error instanceof Error ? error.message : 'Failed to send email' 
    }
  }
}

// Teacher reminder - version ƒë∆°n gi·∫£n
export async function sendTeacherReminder(teacherEmail: string, teacherName: string, reportPeriod: string, classes: string[]) {
  const content = `
K√≠nh ch√†o ${teacherName},

Nh·∫Øc nh·ªü n·ªôp b√°o c√°o h·ªçc sinh cho k·ª≥ ${reportPeriod}.

C√°c l·ªõp ch∆∞a ho√†n th√†nh:
${classes.map(cls => `- ${cls}`).join('\n')}

Vui l√≤ng ho√†n th√†nh b√°o c√°o s·ªõm nh·∫•t c√≥ th·ªÉ.

Tr√¢n tr·ªçng,
H·ªá th·ªëng EduConnect
  `

  return await sendSimpleEmail({
    to: teacherEmail,
    subject: `‚è∞ Nh·∫Øc nh·ªü n·ªôp b√°o c√°o - ${reportPeriod}`,
    content: content
  })
}

// Parent notification - version ƒë∆°n gi·∫£n  
export async function sendParentNotification(parentEmail: string, parentName: string, studentName: string, reportPeriod: string) {
  const content = `
K√≠nh ch√†o ${parentName},

B√°o c√°o h·ªçc t·∫≠p c·ªßa con em ${studentName} cho k·ª≥ ${reportPeriod} ƒë√£ s·∫µn s√†ng.

Vui l√≤ng ƒëƒÉng nh·∫≠p h·ªá th·ªëng ƒë·ªÉ xem chi ti·∫øt.

Tr√¢n tr·ªçng,
H·ªá th·ªëng EduConnect
  `

  return await sendSimpleEmail({
    to: parentEmail,
    subject: `üìã B√°o c√°o h·ªçc t·∫≠p - ${studentName}`,
    content: content
  })
}
